name: Maven Release

on:
  push:
    branches:
      - main

jobs:
  release:
    if: "!contains(github.event.head_commit.message, '[maven-release-plugin]')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create Maven settings.xml
        run: |
          mkdir -p $HOME/.m2
          cat > $HOME/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>edoardopelli</username>
                <password>${GITHUB_TOKEN}</password>
              </server>
            </servers>
          </settings>
          EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git user
        run: |
            git config --global user.email "edoardo.pelli@gmail.com"
            git config --global user.name "Edoardo Pelli"
  
  
      - name: Build and release with Maven (skip tests)
        run: mvn -B release:prepare release:perform -Darguments="-DskipTests"

      # Estraggo il tag dall’ambiente. Se il push è relativo a un tag Git, la variabile GITHUB_REF sarà del formato "refs/tags/v1.2.3"
      - name: Set Docker image tags
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
              TAG="${GITHUB_REF#refs/tags/}"
          else
              TAG="latest"
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            edoardopelli/cheetah-monitoring:${{ steps.vars.outputs.tag }}
            edoardopelli/cheetah-monitoring:latest